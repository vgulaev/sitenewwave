// Generated by CoffeeScript 1.6.3
(function() {
  var showGroup2, show_dop_uslugi, show_groups, show_how_to_make_order, show_rezka, switch_tabs, tabs, tabs_dict;

  Array.prototype.toDict = function(key) {
    return this.reduce((function(dict, obj) {
      if (obj[key] != null) {
        dict[obj[key]] = obj;
      }
      return dict;
    }), {});
  };

  tabs = [
    {
      id: "tabBasket",
      other: ["basketDiv", "showPriceSpan"],
      counter: ["tabPrice"]
    }, {
      id: "tabPrice",
      other: ["pTableContentTab", "showBasketSpan"],
      counter: ["tabBasket"]
    }, {
      id: "closeBasket",
      other: ["pTableContentTab", "showBasketSpan"],
      counter: ["tabBasket"]
    }, {
      id: "switchOrderDiv",
      other: ["orderDiv", "showNDSlabel"],
      counter: ["switchDeliveryDiv", "switchNotificationDiv"],
      active_class: "activeDiv",
      inactive_class: "inactiveDiv"
    }, {
      id: "switchDeliveryDiv",
      other: ["deliveryDiv"],
      counter: ["switchOrderDiv", "switchNotificationDiv"],
      active_class: "activeDiv",
      inactive_class: "inactiveDiv"
    }, {
      id: "switchNotificationDiv",
      other: ["notificationDiv"],
      counter: ["switchOrderDiv", "switchDeliveryDiv"],
      active_class: "activeDiv",
      inactive_class: "inactiveDiv"
    }
  ];

  tabs_dict = tabs.toDict("id");

  switch_tabs = function(id) {
    var counter, counters, other, _i, _j, _k, _len, _len1, _len2, _ref, _ref1;
    counters = tabs_dict[id]["counter"];
    for (_i = 0, _len = counters.length; _i < _len; _i++) {
      counter = counters[_i];
      _ref = tabs_dict[counter]["other"];
      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
        other = _ref[_j];
        $("#" + other).hide();
      }
      if (tabs_dict[counter]["active_class"]) {
        $("#" + tabs_dict[counter]['id']).removeClass(tabs_dict[counter]['active_class']);
      }
      if (tabs_dict[counter]["inactive_class"]) {
        $("#" + tabs_dict[counter]['id']).addClass(tabs_dict[counter]['inactive_class']);
      }
    }
    _ref1 = tabs_dict[id]["other"];
    for (_k = 0, _len2 = _ref1.length; _k < _len2; _k++) {
      other = _ref1[_k];
      $("#" + other).show();
    }
    if (tabs_dict[id]["active_class"]) {
      $("#" + id).addClass(tabs_dict[id]['active_class']);
    }
    if (tabs_dict[id]["inactive_class"]) {
      return $("#" + id).removeClass(tabs_dict[id]['inactive_class']);
    }
  };

  show_groups = function() {
    $.blockUI.defaults.css.borderRadius = '10px';
    $.blockUI.defaults.fadeIn = 100;
    $.blockUI.defaults.fadeOut = 100;
    $.blockUI.defaults.css.backgroundColor = 'white';
    $.blockUI.defaults.css.cursor = 'defaults';
    $.blockUI.defaults.css.boxShadow = '0px 0px 5px 5px rgb(207, 207, 207)';
    $.blockUI.defaults.css.fontSize = '14px';
    $.blockUI.defaults.css.width = '700px';
    $.blockUI.defaults.css.height = '370px';
    $.blockUI.defaults.css.paddingTop = '70px';
    $.blockUI.defaults.css.paddingLeft = '20px';
    $.blockUI({
      message: $("#tags")
    });
    $(".blockMsg").draggable();
    return $(document).on("keyup", function(e) {
      e.preventDefault();
      if (e.which === 27) {
        return $.unblockUI();
      }
    });
  };

  showGroup2 = function(term) {
    $("#itemName").val(term);
    $("#itemName").change();
    return $.unblockUI();
  };

  App.load_delivery_cost = function() {
    return $.ajax({
      type: "GET",
      url: "/1cengine/json/delivery.json",
      async: false,
      data: "",
      success: function(html) {
        var cost_car, item, key, n_car, opt_string, value, _i, _len, _ref, _ref1;
        opt_string = "<option>--</option>";
        _ref = html[$(".active_city").attr("name")];
        for (key in _ref) {
          value = _ref[key];
          n_car = "Газель";
          if (App.Basket._total_weight > 2) {
            n_car = "Длинномер";
          } else if ($(".active_city").attr("name") === "outcity") {
            n_car = "Длинномер";
          } else {
            _ref1 = App.Basket._item_list;
            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
              item = _ref1[_i];
              if (item.length > 6) {
                n_car = "Длинномер";
              }
            }
          }
          cost_car = value[n_car];
          opt_string = opt_string + ("<option value='" + cost_car + "'>" + key + "</option>");
          $(".delivery_car").html(n_car);
        }
        $(".city_select").html(opt_string);
        return $(".delivery_cost").html(0);
      }
    });
  };

  show_dop_uslugi = function(chkbox) {
    if ($(chkbox).is(":checked")) {
      $(".is_in_city").show();
      $(".city_choose").show();
      return App.load_delivery_cost();
    } else {
      $(".is_in_city").hide();
      return $(".city_choose").hide();
    }
  };

  show_rezka = function(chkbox) {
    if ($(chkbox).is(":checked")) {
      return $(".rezka_wrapper").show();
    } else {
      return $(".rezka_wrapper").hide();
    }
  };

  show_how_to_make_order = function() {
    var m_css, offset, w_height;
    offset = $("#pTableContentTab").offset();
    w_height = $(window).height() - 260;
    m_css = {
      width: '770px',
      maxHeight: w_height + "px",
      height: 'auto',
      overflow: 'auto',
      paddingTop: '10px',
      paddingRight: '20px',
      paddingBottom: '30px',
      textAlign: 'justify',
      top: '130px',
      left: offset.left + "px"
    };
    $.blockUI({
      message: "<h2>Как выписать счёт</h2>\n<p>\nУважаемый клиент,<br />\nРаздел \"купить онлайн\" представляет собой каталог, где Вы можете найти интересующий Вас металлопрокат.\nВы можете как выбрать группу номенклатуры в левом меню, так и ввести нужное наименование в строку поиска.\nЗатем нужно добавить товар в корзину - для этого достаточно нажать на значок корзины в строке номенклатуры, ввести требуемое количество и нажать кнопку \"в корзину\".\n</p><p>\nДля последующего оформления Вашего заказа нажмите на кнопку \"Корзина\", расположенную в строке со ссылками на прайс. Там Вы можете просмотреть выбранный товар с его стоимостью, выбрать доставку и резку номенклатуры, и завершить оформление заказа.\n</p><p>\nНажав на кнопку \"Оформить\", Вы отправите заказ на регистрацию в нашей системе, это займёт не больше минуты. На указанный Вами адрес электронной почты будет выслано сообщение с номером заказа и приглашением в личный кабинет, где Вы сможете увидеть текущий статус заказа. Вскоре с Вами свяжется наш менеджер, который уточнит детали заказа.\n</p><p>\nПосле чего Вам нужно оплатить и забрать покупки, или же дождаться, когда их привезут.\n</p><p>\nУдачных покупок в нашем интернет магазине.</p>\n<div class=\"closeHowToMakeOrder\">Я понял, спасибо</div>",
      css: m_css
    });
    $(".blockMsg").draggable();
    $(".closeHowToMakeOrder").click(function() {
      return $.unblockUI();
    });
    return $(document).on("keyup", function(e) {
      e.preventDefault();
      if (e.which === 27) {
        return $.unblockUI();
      }
    });
  };

  $(document).ready(function() {
    var PAGE, c_url, is_empty, item, name, things,
      _this = this;
    $.blockUI.defaults.css.borderRadius = '10px';
    $.blockUI.defaults.fadeIn = 100;
    $.blockUI.defaults.fadeOut = 100;
    $.blockUI.defaults.css.backgroundColor = 'white';
    $.blockUI.defaults.css.cursor = 'defaults';
    $.blockUI.defaults.css.boxShadow = '0px 0px 5px 5px rgb(207, 207, 207)';
    $.blockUI.defaults.css.fontSize = '14px';
    $.blockUI.defaults.css.width = '700px';
    $.blockUI.defaults.css.height = '370px';
    $.blockUI.defaults.css.paddingTop = '70px';
    $.blockUI.defaults.css.paddingLeft = '20px';
    PAGE = 1;
    if ($("#tags").css("display") === "none") {
      $("#showGroupsDiv").show();
    }
    for (item in tabs_dict) {
      name = item;
      $("#" + name).click(function() {
        return switch_tabs(this.id);
      });
    }
    $("#itemName").autocomplete({
      source: "/1cengine/py_scripts/item_autocomplete.py",
      autoFocus: true,
      minLength: 0,
      select: function(event, ui) {
        $(this).val(ui.item.label);
        $(this).change();
        $(this).blur();
        return $(this).click();
      }
    }, 0).click(function() {
      return $(this).autocomplete("search", $(this).val());
    });
    $("#itemName").change(function() {
      var value;
      $("#seotext").html("");
      value = $("#itemName").val();
      value = value.replace("+", " ");
      $("#qRes").fadeOut(400);
      $.ajax({
        type: "GET",
        url: "/1cengine/py_scripts/get_items_bs.py",
        async: true,
        data: "term=" + encodeURIComponent(value) + "",
        success: function(html) {
          $("#qRes").html(html);
          $("#qRes").fadeIn(400);
          if ($(".item").length >= 1) {
            $("#hollowResult").empty();
          } else {
            $("#hollowResult").html("<p class='hollow_result'>Извините, но по заданному запросу товар не найден</p>");
          }
          if ($(".item").length === 20) {
            $("#show_next_prev").show();
          } else {
            $("#show_next_prev").hide();
          }
          window.history.pushState({
            term: value
          }, '', '/1cengine/site/' + $.trim(value) + '/');
          $(".bItem").click(function() {
            var elem_id;
            elem_id = $(this).closest("tr").attr("id");
            item = App.Item.elem_exist(elem_id);
            if (item === false) {
              return item = new App.Item($(this).closest("tr").attr("id"));
            } else {
              return item.show_modal();
            }
          });
          $(".oItem").click(function() {
            var elem_id;
            elem_id = $(this).closest("tr").attr("id");
            item = App.Item.elem_exist(elem_id);
            if (item === false) {
              return item = new App.Item($(this).closest("tr").attr("id"));
            } else {
              return item.show_modal();
            }
          });
          return false;
        }
      });
      return $.ajax({
        type: "GET",
        url: "/1cengine/py_scripts/get_count_items.py",
        async: true,
        data: "term=" + encodeURIComponent(value) + "",
        success: function(html) {
          return $(".count_all_result").html(html);
        }
      });
    });
    $(window).on("popstate", function(e) {
      $("#itemName").val(history.state['term']);
      return $("#itemName").change();
    });
    $("#showNds").change(function() {
      if (this.checked) {
        return $(".NDSHeader, .itemNdsSumTd, .itemNdsKfTd, .ndsAllsum").show();
      } else {
        return $(".NDSHeader, .itemNdsSumTd, .itemNdsKfTd, .ndsAllsum").hide();
      }
    });
    $("#show_groups").click(function() {
      return show_groups();
    });
    $("#showAll").click(function() {
      var value;
      value = $("#itemName").val();
      value = value.replace("+", " ");
      return $.ajax({
        type: "GET",
        url: "/1cengine/py_scripts/get_items_bs.py",
        async: true,
        data: "term=" + encodeURIComponent(value) + "&show_all=true",
        success: function(html) {
          $("#qRes").html(html);
          if ($(".item").length >= 1) {
            $("#hollowResult").empty();
          } else {
            $("#hollowResult").html("Извините, но по заданному запросу товар не найден");
          }
          $("#show_next_prev").hide();
          $(".bItem").click(function() {
            var elem_id;
            elem_id = $(this).closest("tr").attr("id");
            item = App.Item.elem_exist(elem_id);
            if (item === false) {
              return item = new App.Item($(this).closest("tr").attr("id"));
            } else {
              return item.show_modal();
            }
          });
          return $(".oItem").click(function() {
            var elem_id;
            elem_id = $(this).closest("tr").attr("id");
            item = App.Item.elem_exist(elem_id);
            if (item === false) {
              return item = new App.Item($(this).closest("tr").attr("id"));
            } else {
              return item.show_modal();
            }
          });
        }
      });
    });
    $(".next_result").click(function() {
      var value;
      value = $("#itemName").val();
      value = value.replace("+", " ");
      return $.ajax({
        type: "GET",
        url: "/1cengine/py_scripts/get_items_bs.py",
        async: true,
        data: "term=" + encodeURIComponent(value) + "&page=" + PAGE + 1 + "",
        success: function(html) {
          $("#qRes").html(html);
          PAGE = PAGE + 1;
          $(".bItem").click(function() {
            var elem_id;
            elem_id = $(this).closest("tr").attr("id");
            item = App.Item.elem_exist(elem_id);
            if (item === false) {
              return item = new App.Item($(this).closest("tr").attr("id"));
            } else {
              return item.show_modal();
            }
          });
          return $(".oItem").click(function() {
            var elem_id;
            elem_id = $(this).closest("tr").attr("id");
            item = App.Item.elem_exist(elem_id);
            if (item === false) {
              return item = new App.Item($(this).closest("tr").attr("id"));
            } else {
              return item.show_modal();
            }
          });
        }
      });
    });
    $(".prev_result").click(function() {
      var n_page, value;
      value = $("#itemName").val();
      value = value.replace("+", " ");
      if (PAGE !== 1) {
        n_page = PAGE - 1;
        return $.ajax({
          type: "GET",
          url: "/1cengine/py_scripts/get_items_bs.py",
          async: true,
          data: "term=" + encodeURIComponent(value) + "&page=" + n_page + "",
          success: function(html) {
            $("#qRes").html(html);
            PAGE = PAGE - 1;
            $(".bItem").click(function() {
              var elem_id;
              elem_id = $(this).closest("tr").attr("id");
              item = App.Item.elem_exist(elem_id);
              if (item === false) {
                return item = new App.Item($(this).closest("tr").attr("id"));
              } else {
                return item.show_modal();
              }
            });
            return $(".oItem").click(function() {
              var elem_id;
              elem_id = $(this).closest("tr").attr("id");
              item = App.Item.elem_exist(elem_id);
              if (item === false) {
                return item = new App.Item($(this).closest("tr").attr("id"));
              } else {
                return item.show_modal();
              }
            });
          }
        });
      }
    });
    $("#orderDiv").find(".next_step").click(function() {
      return switch_tabs("switchDeliveryDiv");
    });
    $("#deliveryDiv").find(".next_step").click(function() {
      return switch_tabs("switchNotificationDiv");
    });
    $("#groups_list").find("li.main_group").each(function(index, element) {
      return $(element).click(function() {
        var g_name;
        g_name = $(this).attr("name");
        if ($(element).hasClass("active_group") === false) {
          $("#itemName").val(g_name);
          $("#itemName").change();
          $("#groups_list").find("li.main_group").removeClass("active_group");
          $(element).addClass("active_group");
        }
        if ($(element).children().is(".subgroup_c") === false) {
          $(element).append("<ul class=\"subgroup_c\"></ul>");
          return $.ajax({
            type: "GET",
            url: "/1cengine/py_scripts/item_autocomplete.py",
            async: false,
            data: "term=" + encodeURIComponent(g_name) + "",
            success: function(html) {
              var subgroup, subgroups, _fn, _i, _len,
                _this = this;
              subgroups = JSON.parse(html);
              _fn = function(subgroup) {
                var subgroup_name;
                subgroup_name = subgroup.replace(g_name, "");
                return $(element).find("ul").append(("<li class='subgroup' name='" + subgroup_name + "'>") + subgroup_name + "</li>");
              };
              for (_i = 0, _len = subgroups.length; _i < _len; _i++) {
                subgroup = subgroups[_i];
                _fn(subgroup);
              }
              return $(element).find("li.subgroup").each(function(index, sgroup) {
                return $(sgroup).click(function() {
                  var i_name;
                  $(".subgroup").removeClass("active_subgroup");
                  $(sgroup).addClass("active_subgroup");
                  i_name = g_name.replace(/^\s+|\s+$/g, "" + " " + $(sgroup).attr("name").replace(/^\s+|\s+$/g, ""));
                  $("#itemName").val(i_name);
                  return $("#itemName").change();
                });
              });
            }
          });
        }
      });
    });
    $("li.subgroup").each(function(index, sgroup) {
      return $(sgroup).click(function() {
        var g_name, group, i_name;
        $(".subgroup").removeClass("active_subgroup");
        $(sgroup).addClass("active_subgroup");
        group = $(sgroup).closest(".active_group");
        g_name = $(group).attr("name");
        i_name = g_name.replace(/^\s+|\s+$/g, "" + " " + $(sgroup).attr("name").replace(/^\s+|\s+$/g, ""));
        $("#itemName").val(i_name);
        return $("#itemName").change();
      });
    });
    c_url = window.location.pathname;
    is_empty = c_url.replace("/1cengine/site/", "");
    if (is_empty.length < 3) {
      things = $("li.main_group");
      $(things[Math.floor(Math.random() * things.length)]).click();
    }
    $("#i_want_delivery").change(function() {
      return show_dop_uslugi(this);
    });
    $("#i_want_rezka").change(function() {
      return show_rezka(this);
    });
    $(".is_city_choose").click(function() {
      $(".active_city").removeClass("active_city");
      $(this).addClass("active_city");
      return App.load_delivery_cost();
    });
    $(".city_select").change(function() {
      return $(".delivery_cost").html($(".city_select option:selected").val());
    });
    return $(".howtomakeorder").click(function() {
      return show_how_to_make_order();
    });
  });

}).call(this);
